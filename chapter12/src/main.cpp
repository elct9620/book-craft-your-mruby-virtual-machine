#include<mvm.h>
#include<stdio.h>

#include <stdint.h>
#if defined __GNUC__
__attribute__((aligned(4)))
#elif defined _MSC_VER
__declspec(align(4))
#endif

const uint8_t bin[] = {
  // cputs
  0x52,0x49,0x54,0x45,0x30,0x30,0x30,0x37,0xf9,0x53,0x00,0x00,0x00,0x51,0x4d,0x41,
  0x54,0x5a,0x30,0x30,0x30,0x30,0x49,0x52,0x45,0x50,0x00,0x00,0x00,0x33,0x30,0x30,
  0x30,0x32,0x00,0x00,0x00,0x46,0x00,0x01,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x09,
  0x10,0x01,0x2e,0x01,0x00,0x00,0x37,0x01,0x67,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x01,0x00,0x05,0x63,0x70,0x75,0x74,0x73,0x00,0x45,0x4e,0x44,0x00,0x00,0x00,0x00,
  0x08,
};

mrb_value c_puts() {
  printf("Hello World from C\n");

  return mrb_nil_value();
}

static mrb_state* mrb;

#if defined(UNIT_TEST) || defined(DEBUG)
int main(int argc, char** argv) {
  mrb = mrb_open();
  mrb_define_method(mrb, "cputs", c_puts);
  mrb_exec(mrb, bin + 34);
  mrb_close(mrb);
}
#else
#include <Arduino.h>

void setup() {
  Serial.begin(9600);

  mrb = mrb_open();
  mrb_define_method(mrb, "cputs");
}

void loop() {
  mrb_exec(mrb, bin + 34);
  delay(5000);
}
#endif
